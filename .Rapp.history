table(x %in% y)[,"TRUE"]
table(x %in% y)[,2]
as.data.frame(table(x %in% y))[,2]
as.data.frame(table(x %in% y))[1,2]
as.data.frame(table(x %in% y))[1,1]
as.data.frame(table(x %in% y))[2,1]
as.data.frame(table(x %in% y))[2,2]
?renderText
library(shiny)
?renderText
?tagList
cal <- readRDS("~/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureTrace.quant")
ca.frame <- cal[["Intensities"]]
cal.frame <- cal[["Intensities"]]
total.number <- length(cal.frame[,1])
total.number
sample.number <- total.number-round(.2*total.number, 0)
sample.number
hold <- cal.frame[sample(nrow(cal.frame), sample.number),]
length(hold[,1])
rownames(hold) %in% rownames(cal.frame)
as.data.frame(table(rownames(hold) %in% rownames(cal.frame)))[2,2]
total.number <- length(cal.frame[,1])#
    sample.number <- total.number-round(input$percentrandom*total.number, 0)#
    hold <- cal.frame[sample(nrow(cal.frame), sample.number),]#
    hold$Spectrum %in% cal.frame$Specrum
sample.number <- total.number-round(.2*total.number, 0)
hold <- cal.frame[sample(nrow(cal.frame), sample.number),]#
    hold$Spectrum %in% cal.frame$Specrum
length(hold[,1])
ls(hold)
cal.frame <- cal[["Values"]]
total.number <- length(cal.frame[,1])
hold <- cal.frame[sample(nrow(cal.frame), sample.number),]#
    hold$Spectrum %in% cal.frame$Specrum
ls(cal.frame)
head(cal.frame$Spectrum)
head(hold$Spectrum)
match(hold$Spectrum, cal.frame$Spectrum)
cal.frame$Spectrum[match(hold$Spectrum)]
cal.frame$Spectrum %in% hold$Specrum
cal.frame$Spectrum %in% hold$Spectrum
test <- cal.frame$Spectrum %in% hold$Spectrum
as.data.frame(table(test))[2,2]
?rHandsontableOutput
??rHandsontableOutput
?rhandsontable
??rhandsontable
update.packages()
set.seed(seed)
random()
rsconnect::deployApp("~/GitHub/cloudCal", appName="cloudCal")
x <- c(TRUE, TRUE ,TRUE)
y <- c(FALSE, TRUE TRUE)
y <- c(FALSE, TRUE, TRUE)
any(x, y)
sapply(x, function(x) any(x, y))
sapply(y, function(x) any(x, x))
x <- c(TRUE, TRUE, FALSE)
sapply(y, function(x) any(x, x))
any(TRUE, FALSE)
which(TRUE, FALSE)
x | y
x $ y
x & y
x <- c(TRUE, TRUE, TRUE)
x & y
runApp("~/Desktop/CloudCal-cd4e67eece89bac3f9963f30dd0ebbad96219d0a")
shiny::runApp("~/Desktop/CloudCal-cd4e67eece89bac3f9963f30dd0ebbad96219d0a")
update.packages()
shiny::runGitHub("leedrake5/CloudCalTemp")
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?predict
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
test <- readRDS("~/Desktop/myCalibration-10.quant")
str(test)
colnames(test$Values[,1]
)
head(test$Values[,1])
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
shiny::runGitHub("leedrake5/CloudCal")
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
rsconnect::deployApp("~/GitHub/CloudCal", appName="CloudCal")
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
shiny::runApp("~/GitHub/obsidianSource")
shiny::runApp("~/GitHub/cloudCal")
install.packages(c("caTools", "RWeka", "rpart", "mda", "gbm"))
install.packages("tidyverse")
install.packages("pROC")
install.packages(c("blackboost", "C50", "ada"))
install.packages("mboost")
install.packages(c("e1071", "klaR", "svmpath", 'kernlab'))
install.packages("foreach")
install.packages("doSomething")
install.packages(c("doMC", "doMPI", "doSMP"))
install.packages(c('pcaPP", "pls", "sparseLDA'))
install.packages(c("pcaPP", "pls", "sparseLDA"))
update.packages()
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?cor
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?cor
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
log10(1)
log10(0)
update.packages()
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
rsconnect::deployApp("~/GitHub/CloudCal", appName="cloudCal")
rsconnect::deployApp("~/GitHub/CloudCal", appName="CloudCal")
my.file <- file('/Users/lee/Desktop/v25.pdz', 'rb')
head(my.file)
my.file
v25path <- "/Users/lee/Desktop/v25.pdz"
id <- integer(0)#
response <- character(0)#
id = c(id, readBin(my.file, character(), n=6, size = 10, endian = 'little', signed=FALSE))#
response = c(response, readChar(my.file, 1))
response
id
fileSize <- file.info("/Users/lee/Desktop/v25.pdz")$size
fileSize
raw <- readBin("/Users/lee/Desktop/v25.pdz", what="raw", n=fileSize)
raw
nbrOfRecords <- length(raw) %/% 4
dim(raw) <- c(4, nbrOfRecords)
raw
t.raw <- t(raw)
ints <- readBin(con=raw[1:4,], what="integer", size=4, n=nbrOfRecords, endian="little")
floats <- readBin(con=raw[5:6,], what="double", size=4, n=nbrOfRecords, endian="little")
ints
raw
raw <- readBin("/Users/lee/Desktop/v25.pdz", what="raw", n=fileSize)
raw
head(ints)
?readbin
?readBin
update.packages()
shiny::runApp("~/GitHub/cloudCal")
Manure.Trace.list <- lapply(c("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4473 Cal/R Cals/900F4473ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4504 Cal/R Cals/900F4504ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/Rothamstead 5i 900F4166/R Cals/900F4166ManureTrace.quant"), readRDS)
length(Manure.Trace.list)
names(ManureTrace.list)
names(Manure.Trace.list)
names(Manure.Trace.list) <- c("900F4352", "900F4473", "900F4504", "900F4166))
)
names(Manure.Trace.list) <- c("900F4352", "900F4473", "900F4504", "900F4166")
names(Manure.Trace.list)
ls(F4166ManureTrace)
###900F4352#
F4352ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureLight.quant")#
F4352ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureTrace.quant")#
###900F4473#
F4473ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4473 Cal/R Cals/900F4473ManureLight.quant")#
F4473ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4473 Cal/R Cals/900F4473ManureTrace.quant")#
###900F4504#
F4504ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4504 Cal/R Cals/900F4504ManureLight.quant")#
F4504ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4504 Cal/R Cals/900F4504ManureTrace.quant")#
###900F4166#
F4166ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/Rothamstead 5i 900F4166/R Cals/900F4166ManureLight.quant")#
F4166ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/Rothamstead 5i 900F4166/R Cals/900F4166ManureTrace.quant")
ls(F4166ManureTrace)
ManureTraceIntensitiesList <- lapply(Manure.Trace.list, "[[", "Intensities")
ManureTraceIntensitiesList[[1]]
intensities.list <- ManureTraceIntensitiesList
cal.names <- names(Manure.Trace.list)
cal.names
names(intensities.list) <- cal.names
intensities.list <- mapply(cbind, intensities.list, Instrument=cal.names, SIMPLIFY=FALSE)
head(intensities.list[[1]])
head(intensities.list[[2]])
test <- do.call(intensities.list, rbind)
test <- do.call(intensities.list, "rbind")
test <- do.call("rbind", intensities.list)
lenth(test[,1])
test
ls(F4166ManureTrace)
filetype.list <- lapply(Manure.Trace.list, "[[", "FileType")
filetype.list
unique(filetype.list)
filetype.list <- sapply(Manure.Trace.list, "[[", "FileType")
filetype.lsit
filetype.list
unique(filetype.list)
update.packages()
###900F4352#
F4352ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureLight.quant")#
F4352ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureTrace.quant")#
###900F4473#
F4473ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4473 Cal/R Cals/900F4473ManureLight.quant")#
F4473ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4473 Cal/R Cals/900F4473ManureTrace.quant")#
###900F4504#
F4504ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4504 Cal/R Cals/900F4504ManureLight.quant")#
F4504ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4504 Cal/R Cals/900F4504ManureTrace.quant")#
###900F4166#
F4166ManureLight <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/Rothamstead 5i 900F4166/R Cals/900F4166ManureLight.quant")#
F4166ManureTrace <- readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/Rothamstead 5i 900F4166/R Cals/900F4166ManureTrace.quant")
Manure.Trace.list <- lapply(c("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4473 Cal/R Cals/900F4473ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4504 Cal/R Cals/900F4504ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/Rothamstead 5i 900F4166/R Cals/900F4166ManureTrace.quant"), readRDS)#
#
names(Manure.Trace.list) <- c("900F4352", "900F4473", "900F4504", "900F4166")
ls(F4166ManureTrace)
test <-  readRDS("/Users/lee/Dropbox/Documents/ICRAF/2017\ Data/New\ ICRAF\ Tracer\ 5i\ Cals\ Final/ICRAF\ 5i\ 900F4473\ Cal/R\ Cals/900F4473ManureTrace.quant")
ls(test$calList[[1]])
ls(test[[]]
)
ls(test[["calList"]])
ls(test[["calList"]][[1]])
ls(test[["calList"]][["As.K.alpha"]])
ls(test[["calList"]][[1]][["As.K.alpha"]])
names(test[["calList"]])
names(test[["calList"]][[1]])
names(test[["calList"]][["Zn.K.alpha"]])
ls(test[["calList"]][["Zn.K.alpha"]])
test[["calList"]][["Zn.K.alpha"]]
test[["calList"]][["Zn.K.alpha"]][[1]][["StandardsUsed"]]
cal.list <- test[["calList"]]
element.cal.list <- lapply(cal.list, "[[", "Zn.K.alpha")
element.cal.meta <- lapply(element.cal.list, "[[", 1])
element.cal.meta <- lapply(element.cal.list, "[[", "1"])
element.cal.list[[1]]
length(element.cal.list)
cal.list <- lapply(Manure.Trace.list, "[[", "calList")
element.cal.list <- lapply(cal.list, "[[", "Zn.K.alpha")
length(element.cal.list)
element.cal.meta <- lapply(element.cal.list, "[[", 1])
element.cal.meta <- lapply(element.cal.list, "[[", "1"])
element.cal.meta <- lapply(element.cal.list, "[[")
element.cal.list
standards.vector <- sapply(element.cal.list,  [[1]][["StandardsUsed"]])
element.cal.meta <- lapply(element.cal.list, "[[", 1)
standards.vector <- sapply(element.cal.meta, "[[", [[1]][["StandardsUsed"]])
standards.vector <- sapply(element.cal.meta, "[[", "StandardsUsed")
standards.vector
standards.vector <- as.vector(unlist(lapply(element.cal.meta, "[[", "StandardsUsed")))
standards.vector
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?split
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?seq
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?data.frame
x <- c(1, 2, 3)
y <- c(3, 4, 5)
data.frame(bob=x, bill=y)
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
update.packages()
Manure.Trace.list <- lapply(c("/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4352 Cal/R Cals/900F4352ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4473 Cal/R Cals/900F4473ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/ICRAF 5i 900F4504 Cal/R Cals/900F4504ManureTrace.quant", "/Users/lee/Dropbox/Documents/ICRAF/2017 Data/New ICRAF Tracer 5i Cals Final/Rothamstead 5i 900F4166/R Cals/900F4166ManureTrace.quant"), readRDS)
names(Manure.Trace.list) <- c("900F4352", "900F4473", "900F4504", "900F4166")
ManureCalList <- lapply(Manure.Trace.list, "[[", "calList")
names(ManureCalList) <- c("900F4352", "900F4473", "900F4504", "900F4166")
element.names <- ls(ManureCalList[[1]])
element.names
element.cal.list <- lapply(ManureCalList, "[[", element.names)
element.cal.list <- lapply(cal.list, "[[", "K.K.alpha")
element.cal.meta <- as.vector(unlist(lapply(element.cal.list, "[[", "K.K.alpha")))
element.cal.meta <- as.vector(unlist(lapply(ManureCalList, "[[", "K.K.alpha")))
head(element.cal.meta[[1]])
element.cal.meta2 <- as.vector(unlist(lapply(element.cal.meta, "[[", 1)))
head(element.cal.meta2[[1]])
element.cal.meta[[1]
]
head(ManureCalList[[1]])
element.cal.meta <- lapply(ManureCalList, "[[", "K.K.alpha")
length(element.cal.meta)
element.cal.meta[[1]]
element.cal.meta2 <- lapply(element.cal.meta, "[[", 1)
element.cal.meta2[[1]]
element.cal.meta3 <- as.vector(lapply(element.cal.meta, "[[", "StandardsUsed"))
element.cal.meta3
element.cal.meta3 <- as.vector(lapply(element.cal.meta2, "[[", "StandardsUsed"))
element.cal.meta3[[1]]
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
install.packages(purrr)
install.packages("purrr")
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?flatten_dbl
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
?as.vector
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
shiny::runApp('/Users/lee/GitHub/CloudCal', launch.browser=TRUE)
shiny::runApp("~/GitHub/Compass")
?sliderInput
?sliderInput
shiny::runApp("~/GitHub/Compass")
